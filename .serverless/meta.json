{
  "/Users/tamaraj/Documents/SIPIA/ITA/Vaje/Vaja 8": {
    "versionSfCore": null,
    "versionFramework": "4.0.35",
    "isWithinCompose": false,
    "composeOrgName": null,
    "servicePath": "/Users/tamaraj/Documents/SIPIA/ITA/Vaje/Vaja 8",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "89acat",
      "app": "vaja8",
      "service": "exams-service",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateExamLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/exams-service-dev-createExam"
              }
            },
            "GetAllExamsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/exams-service-dev-getAllExams"
              }
            },
            "GetExamLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/exams-service-dev-getExam"
              }
            },
            "UpdateExamLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/exams-service-dev-updateExam"
              }
            },
            "DeleteExamLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/exams-service-dev-deleteExam"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "exams-service",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/exams-service-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/exams-service-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "exams-service",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateExamLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/exams-service/dev/1717599702364-2024-06-05T15:01:42.364Z/exams-service.zip"
                },
                "Handler": "handler.createExam",
                "Runtime": "nodejs20.x",
                "FunctionName": "exams-service-dev-createExam",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateExamLogGroup"
              ]
            },
            "GetAllExamsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/exams-service/dev/1717599702364-2024-06-05T15:01:42.364Z/exams-service.zip"
                },
                "Handler": "handler.getAllExams",
                "Runtime": "nodejs20.x",
                "FunctionName": "exams-service-dev-getAllExams",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetAllExamsLogGroup"
              ]
            },
            "GetExamLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/exams-service/dev/1717599702364-2024-06-05T15:01:42.364Z/exams-service.zip"
                },
                "Handler": "handler.getExam",
                "Runtime": "nodejs20.x",
                "FunctionName": "exams-service-dev-getExam",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetExamLogGroup"
              ]
            },
            "UpdateExamLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/exams-service/dev/1717599702364-2024-06-05T15:01:42.364Z/exams-service.zip"
                },
                "Handler": "handler.updateExam",
                "Runtime": "nodejs20.x",
                "FunctionName": "exams-service-dev-updateExam",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateExamLogGroup"
              ]
            },
            "DeleteExamLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/exams-service/dev/1717599702364-2024-06-05T15:01:42.364Z/exams-service.zip"
                },
                "Handler": "handler.deleteExam",
                "Runtime": "nodejs20.x",
                "FunctionName": "exams-service-dev-deleteExam",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteExamLogGroup"
              ]
            },
            "CreateExamLambdaVersionwb7AMPGJKGqZImTpmrEzkcKYxN1SY6haSIOEgPHNCg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateExamLambdaFunction"
                },
                "CodeSha256": "xmw7WLFl18eaovnfPfpKirXGlWgJcbhGrMeaAVrA6dc="
              }
            },
            "GetAllExamsLambdaVersionKJdq1qRMQoXwlqH7Y3BwRm3YPlqV0UkkorcZOxLk": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetAllExamsLambdaFunction"
                },
                "CodeSha256": "xmw7WLFl18eaovnfPfpKirXGlWgJcbhGrMeaAVrA6dc="
              }
            },
            "GetExamLambdaVersion9Hyt7jxuT5cPN5YOB8BpLwUnjleGaNnkUgDJdUUp8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetExamLambdaFunction"
                },
                "CodeSha256": "xmw7WLFl18eaovnfPfpKirXGlWgJcbhGrMeaAVrA6dc="
              }
            },
            "UpdateExamLambdaVersionc3eT4V4wT06Td1KWrwZIkTKFH7bFkkuvItvqNYo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateExamLambdaFunction"
                },
                "CodeSha256": "xmw7WLFl18eaovnfPfpKirXGlWgJcbhGrMeaAVrA6dc="
              }
            },
            "DeleteExamLambdaVersion0CAixTMZAwlHGP2pcecbXn389toP5QZZEfTD2KnO3Y": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteExamLambdaFunction"
                },
                "CodeSha256": "xmw7WLFl18eaovnfPfpKirXGlWgJcbhGrMeaAVrA6dc="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-exams-service",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceExams": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "exams",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceExamsIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceExams"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodExamsPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceExams"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateExamLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateExamLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodExamsGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceExams"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetAllExamsLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetAllExamsLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodExamsIdVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceExamsIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetExamLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetExamLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodExamsIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceExamsIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateExamLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateExamLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodExamsIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceExamsIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteExamLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteExamLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1717599700982": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodExamsPost",
                "ApiGatewayMethodExamsGet",
                "ApiGatewayMethodExamsIdVarGet",
                "ApiGatewayMethodExamsIdVarPut",
                "ApiGatewayMethodExamsIdVarDelete"
              ]
            },
            "CreateExamLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateExamLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetAllExamsLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetAllExamsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetExamLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetExamLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateExamLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateExamLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteExamLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteExamLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ExamsTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Exams",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-exams-service-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateExamLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateExamLambdaVersionwb7AMPGJKGqZImTpmrEzkcKYxN1SY6haSIOEgPHNCg"
              },
              "Export": {
                "Name": "sls-exams-service-dev-CreateExamLambdaFunctionQualifiedArn"
              }
            },
            "GetAllExamsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetAllExamsLambdaVersionKJdq1qRMQoXwlqH7Y3BwRm3YPlqV0UkkorcZOxLk"
              },
              "Export": {
                "Name": "sls-exams-service-dev-GetAllExamsLambdaFunctionQualifiedArn"
              }
            },
            "GetExamLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetExamLambdaVersion9Hyt7jxuT5cPN5YOB8BpLwUnjleGaNnkUgDJdUUp8"
              },
              "Export": {
                "Name": "sls-exams-service-dev-GetExamLambdaFunctionQualifiedArn"
              }
            },
            "UpdateExamLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateExamLambdaVersionc3eT4V4wT06Td1KWrwZIkTKFH7bFkkuvItvqNYo"
              },
              "Export": {
                "Name": "sls-exams-service-dev-UpdateExamLambdaFunctionQualifiedArn"
              }
            },
            "DeleteExamLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteExamLambdaVersion0CAixTMZAwlHGP2pcecbXn389toP5QZZEfTD2KnO3Y"
              },
              "Export": {
                "Name": "sls-exams-service-dev-DeleteExamLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-exams-service-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "createExam": {
          "handler": "handler.createExam",
          "events": [
            {
              "http": {
                "path": "exams",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "exams-service-dev-createExam",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "CreateExamLambdaVersionwb7AMPGJKGqZImTpmrEzkcKYxN1SY6haSIOEgPHNCg"
        },
        "getAllExams": {
          "handler": "handler.getAllExams",
          "events": [
            {
              "http": {
                "path": "exams",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "exams-service-dev-getAllExams",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetAllExamsLambdaVersionKJdq1qRMQoXwlqH7Y3BwRm3YPlqV0UkkorcZOxLk"
        },
        "getExam": {
          "handler": "handler.getExam",
          "events": [
            {
              "http": {
                "path": "exams/{id}",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "exams-service-dev-getExam",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "GetExamLambdaVersion9Hyt7jxuT5cPN5YOB8BpLwUnjleGaNnkUgDJdUUp8"
        },
        "updateExam": {
          "handler": "handler.updateExam",
          "events": [
            {
              "http": {
                "path": "exams/{id}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "exams-service-dev-updateExam",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "UpdateExamLambdaVersionc3eT4V4wT06Td1KWrwZIkTKFH7bFkkuvItvqNYo"
        },
        "deleteExam": {
          "handler": "handler.deleteExam",
          "events": [
            {
              "http": {
                "path": "exams/{id}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "exams-service-dev-deleteExam",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "DeleteExamLambdaVersion0CAixTMZAwlHGP2pcecbXn389toP5QZZEfTD2KnO3Y"
        }
      },
      "resources": {
        "Resources": {
          "ExamsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Exams",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "org: 89acat\napp: vaja8\nservice: exams-service\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  stage: dev\n  region: us-east-1\n\nfunctions:\n  createExam:\n    handler: handler.createExam\n    events:\n      - http:\n          path: exams\n          method: post\n  getAllExams:\n    handler: handler.getAllExams\n    events:\n      - http:\n          path: exams\n          method: get\n  getExam:\n    handler: handler.getExam\n    events:\n      - http:\n          path: exams/{id}\n          method: get\n  updateExam:\n    handler: handler.updateExam\n    events:\n      - http:\n          path: exams/{id}\n          method: put\n  deleteExam:\n    handler: handler.deleteExam\n    events:\n      - http:\n          path: exams/{id}\n          method: delete\n\nresources:\n  Resources:\n    ExamsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: Exams\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "5dc8d64d-9a5d-4b11-a686-e0389d4e09bc",
    "orgName": "89acat",
    "userId": "m13cdV1KjDl79yGPJx",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "oUW4T3pEdWUC9m7W67J7Lf",
          "awsAccountId": "851725359995",
          "status": "alive"
        }
      ],
      "serviceAppId": "fCqgHR2nGDQn0d5V05",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>"
      },
      "instanceParameters": null
    },
    "userName": "89acat",
    "subscription": null,
    "userEmail": "tamarajevtic98@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "851725359995",
    "versionSf": "4.0.35",
    "serviceProviderAwsCfStackName": "exams-service-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:851725359995:stack/exams-service-dev/8fcbb670-2346-11ef-9973-0affd2c8bcaf",
    "serviceProviderAwsCfStackCreated": "2024-06-05T14:19:04.077Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-05T15:02:13.955Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetExamLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:851725359995:function:exams-service-dev-getExam:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-exams-service-dev-GetExamLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateExamLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:851725359995:function:exams-service-dev-updateExam:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-exams-service-dev-UpdateExamLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllExamsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:851725359995:function:exams-service-dev-getAllExams:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-exams-service-dev-GetAllExamsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateExamLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:851725359995:function:exams-service-dev-createExam:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-exams-service-dev-CreateExamLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteExamLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:851725359995:function:exams-service-dev-deleteExam:5",
        "Description": "Current Lambda function version",
        "ExportName": "sls-exams-service-dev-DeleteExamLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://pz9g7qrxt3.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-exams-service-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "exams-service-dev-serverlessdeploymentbucket-zeyngvyq2c00",
        "ExportName": "sls-exams-service-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}